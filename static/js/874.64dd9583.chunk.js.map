{"version":3,"file":"static/js/874.64dd9583.chunk.js","mappings":"yMACA,EAAuB,uBAAvB,EAAsD,wBAAtD,EAAoF,sB,gDCS7EA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA6BJ,OA7BIA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACLC,MAAO,OACPC,UAAY,WACV,IAEIC,EADAC,GADS,IAAIC,MACQC,WAUzB,OARIF,EAAc,GAChBD,EAAM,eACgB,IAAfC,EACPD,EAAM,YACCC,GAAe,IAAMA,GAAe,GAC3CD,EAAM,iBACCC,GAAe,IAAMA,GAAe,KAC3CD,EAAM,gBACDA,GACR,EACDI,SAAW,SAACC,GACV,MAAY,gBAARA,EACK,+BAEQ,aAARA,EACA,4BAEQ,kBAARA,EACA,iBAEQ,gBAARA,EACA,yBADJ,GAGN,EAyEA,OAzEA,iCASD,WACA,IAAIC,EAAgB,IAAIJ,KAAK,wBAAwBK,UAGpDC,KAAKV,MAAQW,aAAY,WAG1B,IAAIC,GAAM,IAAIR,MAAOK,UAGjBI,EAAWL,EAAgBI,EAG3BE,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAOH,EAAQ,MAAT,MACnBK,EAAUH,KAAKC,MAAOH,EAAQ,KAAT,KACrBM,EAAUJ,KAAKC,MAAOH,EAAQ,IAAkB,KAIpDO,SAASC,eAAe,QAAQC,UAAYR,EAAO,KAAOG,EAAQ,KAChEC,EAAU,KAAOC,EAAU,KAIrBN,EAAW,IACbU,cAAcb,KAAKV,OACnBoB,SAASC,eAAe,QAAQC,UAAY,aAE7C,OACJ,wBACD,WACEC,cAAcb,KAAKV,OACnBU,KAAKV,MAAO,OACb,+BACD,WAEEwB,QAAQC,IAAI,uBACZf,KAAKgB,cAEN,gCACD,cAEC,kCACD,WACEhB,KAAKiB,eACN,oBACD,WACG,IAAOC,EAAUlB,KAAKmB,MAAMC,IAAIC,aAAzBH,SACR,OACE,4BACE,SAAC,IAAD,CAAMI,UAAWC,EAAjB,UACE,kCAAQvB,KAAKT,YAAb,aAA6B2B,EAA7B,aAA0ClB,KAAKJ,SAASI,KAAKT,mBAE/D,UAAC,IAAD,CAAM+B,UAAWC,EAAjB,WACE,iBAAMD,UAAWC,EAAjB,mCACA,iBAAMC,GAAG,OAAOF,UAAWC,KAC3B,iBAAMD,UAAWC,EAAjB,gDAEF,SAAC,IAAD,CAAMD,UAAWC,EAAjB,UACR,2BAIG,EAtGIlC,CAAiBoC,EAAAA,WAwGxB,GAAeC,EAAAA,EAAAA,KACb,SAAAC,GAAK,MAAK,CAAEP,IAAKO,KAAS,CAACC,YAAAA,EAAAA,GAD7B,CAEEvC","sources":["webpack://project/./src/views/personal/personal.module.css?4b4a","views/personal/Index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"personal_card__6J73F\",\"timer\":\"personal_timer__Y+ti5\",\"red\":\"personal_red__PImEG\"};","import React, { Component } from 'react'\r\nimport { Layout } from 'antd';\r\nimport style from './personal.module.css';\r\nimport { Card } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { getInfo } from '../../api';\r\nimport { loginAction } from '../../redux/action/loginAction';\r\n\r\n\r\n\r\n class personal extends Component {\r\n  timer =null\r\n  timeOfDay = () => {\r\n    var myDate = new Date();\r\n    var currentHour = myDate.getHours();\r\n    var msg;\r\n    if (currentHour < 12)\r\n      msg = 'Good Morning';\r\n    else if (currentHour == 12)\r\n      msg = 'Good Noon';\r\n    else if (currentHour >= 12 && currentHour <= 17)\r\n      msg = 'Good Afternoon';\r\n    else if (currentHour >= 17 && currentHour <= 24)\r\n      msg = 'Good Evening';\r\n    return msg\r\n  }\r\n  greeting = (time) => {\r\n    if (time == 'Good Morning') {\r\n      return 'wish you have a exciting day'\r\n    }\r\n    else if (time == 'Good Noon') {\r\n      return 'what is your lunch today?'\r\n    }\r\n    else if (time == 'Good Afternoon') {\r\n      return 'ready to home?'\r\n    }\r\n    else if (time == 'Good Evening') {\r\n      return 'have a good sleep'\r\n    }\r\n  }\r\n  // checkLoginReducer=()=>{\r\n  //   if (this.props.res.loginReducer.length){\r\n  //     getInfo().then(res=>{\r\n  //       console.log(11,res)\r\n  //       this.props.loginAction({role:res.role,nickname:res.nickname})\r\n  //     })\r\n  //   }\r\n  // }\r\n  countdown(){\r\n  var countDownDate = new Date(\"Jan 5, 2023 15:37:25\").getTime();\r\n\r\n  // Update the count down every 1 second\r\n   this.timer = setInterval(function() {\r\n\r\n  // Get today's date and time\r\n  var now = new Date().getTime();\r\n\r\n  // Find the distance between now and the count down date\r\n  var distance = countDownDate - now;\r\n\r\n  // Time calculations for days, hours, minutes and seconds\r\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  // Display the result in the element with id=\"demo\"\r\n\r\n  document.getElementById(\"demo\").innerHTML = days + \"d \" + hours + \"h \"\r\n  + minutes + \"m \" + seconds + \"s \";\r\n\r\n\r\n  // If the count down is finished, write some text\r\n      if (distance < 0) {\r\n        clearInterval(this.timer);\r\n        document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\r\n      }\r\n    }, 1000);\r\n  }\r\n  clearTimer(){\r\n    clearInterval(this.timer);\r\n    this.timer =null;\r\n  }\r\n  componentDidMount(){\r\n    // this.checkLoginReducer()\r\n    console.log('component did mount')\r\n    this.countdown()\r\n\r\n  }\r\n  componentWillMount(){\r\n \r\n  }\r\n  componentWillUnmount(){\r\n    this.clearTimer()\r\n  }\r\n  render() {\r\n     const {nickname}=this.props.res.loginReducer\r\n    return (\r\n      <div>\r\n        <Card className={style.card}>\r\n          <h1>{`${this.timeOfDay()}! ${nickname} ,${this.greeting(this.timeOfDay())}`}</h1>\r\n        </Card>\r\n        <Card className={style.card}>\r\n          <span className={style.red}>ONLY&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n          <span id='demo' className={style.timer}></span>\r\n          <span className={style.red}> &nbsp;&nbsp;&nbsp;&nbsp;To Final Exam</span>\r\n        </Card>\r\n        <Card className={style.card}>\r\n<h1></h1>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({ res: state }),{loginAction}\r\n)(personal)"],"names":["personal","timer","timeOfDay","msg","currentHour","Date","getHours","greeting","time","countDownDate","getTime","this","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","document","getElementById","innerHTML","clearInterval","console","log","countdown","clearTimer","nickname","props","res","loginReducer","className","style","id","Component","connect","state","loginAction"],"sourceRoot":""}